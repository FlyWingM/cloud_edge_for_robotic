#Dockerfile.object
FROM python:3.9-slim

# Install system dependencies in a single RUN command to reduce layers
RUN apt-get update && apt-get install -y \
    libportaudio2 \
    cmake \
    build-essential \
    patchelf \
    pkg-config \
    libhdf5-dev \
    libhdf5-serial-dev \
    libglib2.0-0 \
    libgl1-mesa-glx\
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install some Python deps up front
RUN pip install --upgrade pip==23.0.1 && \
    pip install numpy Cython

# Set the working directory
WORKDIR /app

# Copy only the requirements first to leverage Docker caching
COPY requirements.txt /app/

# Install all Python dependencies (including tensorflow, torch, etc.)
#RUN pip install --no-cache-dir -r /app/requirements.txt
RUN pip install --no-cache-dir \
    --default-timeout=300 \ 
    --retries=10 \
    -r /app/requirements.txt

# Copy application files
COPY services/microservice_od.py /app/
COPY utils/ /app/utils/
COPY task /app/task
#COPY services /app/services
COPY od_models /app/od_models

# Expose a default port (this is informational only)
# The actual port is determined by the FLASK_PORT environment variable
EXPOSE 8502

# Run the application
CMD ["python", "/app/microservice_od.py"]